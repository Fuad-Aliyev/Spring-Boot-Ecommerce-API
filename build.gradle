plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'maven'
	id 'org.liquibase.gradle' version '2.0.2'
	id "nu.studer.jooq" version "4.1"
}

ext {
	mavenUser = System.env.MAVEN_REPO_USER
	mavenPassword = System.env.MAVEN_REPO_PASSWORD
	mavenUrl = "${System.env.MAVEN_REPO_URL}repository/maven-public/"
	dockerUser = mavenUser
	dockerPassword = mavenPassword
	dockerRegistry = System.getenv("DOCKER_REGISTRY").replace("http://", "")
	kafkaVersion = '2.5.0'
	junitVersion = '5.1.0'
	lmaxVersion = '3.3.6'
	swaggerVersion = '2.9.2'
	log4j2Version = '2.11.2'
	jacksonVersion = '2.9.2'
	loggingVersion = '1.0.13'
	engineVersion = '1.0.103'
	containerVersion = '1.1.7'
	ticketContainerVersion = '1.0.23'
	managementContainerVersion = '1.0.31'
	ehCacheVersion = '3.8.1'
	cacheApiVersion = '1.1.1'
	grpcVersion = '1.24.0'
	nettySslBridgeVersion = '2.0.26.Final'
	grpcAdapterVersion = '1.0.2'
	grpcMngVersion = '1.0.7'
	grpcTsVersion = '1.1.54'
	grpcEngineServiceVersion = '1.0.35'
	grpcSrdVersion = '1.0.8'
	springCloudVersion = '2.2.3.RELEASE'
	h2Version = "1.4.194"
	jooqVersion = "3.13.0"
	versionMajorNumber = 1
	versionMinorNumber = 0
	versionBuildNumber = (System.env.BUILD_NUMBER ? System.env.BUILD_NUMBER : '0')
	versionSuffix = (System.env.PUBLISH_PROFILE == 'RELEASE' ? '' : '-SNAPSHOT')

	dbUrl = System.env.TICKET_DB_URL
	dbDefaultSchema = System.env.TICKET_DB_PUBLIC_SCHEMA
	dbArchiveShema = "archive"

}

//apply plugin: 'io.spring.dependency-management'
//apply from: 'gradle/liquibase.gradle'
//apply from: 'gradle/jooq.gradle'
//apply from: 'gradle/docker.gradle'
//apply from: 'gradle/k8s.gradle'

group = 'com.sf_ecommerce'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenLocal()
	mavenCentral()
//	maven {
//		credentials {
//			username mavenUser
//			password mavenPassword
//		}
//		url mavenUrl
//	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	// https://mvnrepository.com/artifact/org.json/json
	compile group: 'org.json', name: 'json', version: '20090211'
	compile group: 'org.springframework', name: 'spring-web', version: '5.2.5.RELEASE'
	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
	compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.18'
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	// https://mvnrepository.com/artifact/org.modelmapper/modelmapper
	compile group: 'org.modelmapper', name: 'modelmapper', version: '0.7.5'
	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// https://mvnrepository.com/artifact/io.projectreactor/reactor-core
	compile group: 'io.projectreactor', name: 'reactor-core', version: '3.3.4.RELEASE'
	//security
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-core
	compile group: 'org.springframework.security', name: 'spring-security-core', version: '5.3.1.RELEASE'
	// https://mvnrepository.com/artifact/org.springframework.security.oauth/spring-security-oauth2
	compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.4.0.RELEASE'
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-jwt
	compile group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.0.2.RELEASE'
	// https://mvnrepository.com/artifact/com.auth0/java-jwt
	// https://mvnrepository.com/artifact/com.auth0/auth0
	compile group: 'com.auth0', name: 'auth0', version: '1.15.0'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	compile("com.auth0:java-jwt:3.4.0")
	// https://mvnrepository.com/artifact/com.auth0/auth0-spring-security-api
	compile group: 'com.auth0', name: 'auth0-spring-security-api', version: '1.3.0'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'

	//LOMBOK
	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'

	//Logging & Metrics
	implementation 'org.springframework.kafka:spring-kafka'
	implementation "org.apache.kafka:kafka-clients:${kafkaVersion}"
	implementation("org.springframework.cloud:spring-cloud-starter-sleuth:${springCloudVersion}") {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	implementation "org.springframework.boot:spring-boot-starter-log4j2"
	implementation("org.springframework.cloud:spring-cloud-starter-vault-config:${springCloudVersion}") {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}

	//Database
	implementation "org.postgresql:postgresql"
	implementation "org.jooq:jooq:${jooqVersion}"
	implementation('org.springframework.boot:spring-boot-starter-jooq') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}

	//Caching
	implementation('org.springframework.boot:spring-boot-starter-cache') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	implementation "javax.cache:cache-api:${cacheApiVersion}"
	implementation "org.ehcache:ehcache:${ehCacheVersion}"

	//GRPC
	implementation "io.grpc:grpc-netty:${grpcVersion}"
	implementation "io.grpc:grpc-protobuf:${grpcVersion}"
	implementation "io.grpc:grpc-stub:${grpcVersion}"
	runtime "io.netty:netty-tcnative-boringssl-static:${nettySslBridgeVersion}"

	testCompileOnly 'org.projectlombok:lombok:1.18.20'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}
